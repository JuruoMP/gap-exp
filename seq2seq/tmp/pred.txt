concert_singer	select count(*) from singer	SELECT count(*) FROM singer
concert_singer	select count(*) from singer	SELECT count(*) FROM singer
concert_singer	select name, country, age from singer order by age desc	SELECT name ,  country ,  age FROM singer ORDER BY age DESC
concert_singer	select name, country, age from singer order by age desc	SELECT name ,  country ,  age FROM singer ORDER BY age DESC
concert_singer	select avg(age), min(age), max(age) from singer where country = "France"	SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
concert_singer	select avg(age), min(age), max(age) from singer where country = "France"	SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
concert_singer	select song_name, song_release_year from singer order by age asc limit 1	SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
concert_singer	select song_name, song_release_year from singer order by age asc limit 1	SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
concert_singer	select distinct country from singer where age > 20	SELECT DISTINCT country FROM singer WHERE age  >  20
concert_singer	select distinct country from singer where age > 20	SELECT DISTINCT country FROM singer WHERE age  >  20
concert_singer	select country, count(*) from singer group by country	SELECT country ,  count(*) FROM singer GROUP BY country
concert_singer	select country, count(*) from singer group by country	SELECT country ,  count(*) FROM singer GROUP BY country
concert_singer	select song_name from singer where age > (select avg(age) from singer)	SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
concert_singer	select song_name from singer where age > (select avg(age) from singer)	SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
concert_singer	select location, name from stadium where capacity between 5000 and 10000	SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
concert_singer	select location, name from stadium where capacity between 5000 and 10000	SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
concert_singer	select max(capacity), avg(average) from stadium	select max(capacity), average from stadium
concert_singer	select avg(capacity), max(capacity) from stadium	select avg(capacity) ,  max(capacity) from stadium
concert_singer	select name, capacity from stadium order by average desc limit 1	SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
concert_singer	select name, capacity from stadium order by average desc limit 1	SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
concert_singer	select count(*) from concert where year = 2014 or year = 2015	SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
concert_singer	select count(*) from concert where year = 2014 or year = 2015	SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
concert_singer	select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id	SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
concert_singer	select t2.name, avg(t1.capacity), t1.stadium_id from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id	SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
concert_singer	select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2014 group by t1.stadium_id order by count(*) desc limit 1	SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
concert_singer	select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t1.stadium_id order by count(*) desc limit 1	select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
concert_singer	select year from concert group by year order by count(*) desc limit 1	SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
concert_singer	select year from concert group by year order by count(*) desc limit 1	SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
concert_singer	select name from stadium where stadium_id not in (select stadium_id from concert)	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
concert_singer	select name from stadium where stadium_id not in (select stadium_id from concert)	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
concert_singer	select country from singer where age > 40 intersect select country from singer where age< 30	SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
concert_singer	select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014	SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
concert_singer	select name from stadium except select stadium_name from concert where year = 2014	SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
concert_singer	select concert_name, theme, count(*) from concert group by theme	SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
concert_singer	select concert_name, theme, count(*) from concert group by concert_id	select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
concert_singer	select t2.name, count(*) from concert as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id	SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
concert_singer	select t2.name, count(*) from concert as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id	SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
concert_singer	select t2.name from concert as t1 join singer as t2 on t1.song_id = t2.song_id where t1.year = 2014	SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
concert_singer	select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id join singer as t3 on t2.singer_id = t3.singer_id where t1.year = 2014	SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
concert_singer	select name, country from singer where song_name like "%hey%"	SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
concert_singer	select name, country from singer where song_name like "%hey%"	SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
concert_singer	select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015	SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
concert_singer	select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015	SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
concert_singer	select count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t2.capacity = (select max(capacity) from stadium)	select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
concert_singer	select count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t2.capacity = (select max(capacity) from stadium)	select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
pets_1	select count(*) from pets where weight > 10	SELECT count(*) FROM pets WHERE weight  >  10
pets_1	select count(*) from pets where weight > 10	SELECT count(*) FROM pets WHERE weight  >  10
pets_1	select weight from pets where pettype = "dog" order by pet_age limit 1	SELECT weight FROM pets ORDER BY pet_age LIMIT 1
pets_1	select weight from pets where pettype = "dog" order by weight asc limit 1	SELECT weight FROM pets ORDER BY pet_age LIMIT 1
pets_1	select max(weight), pettype from pets group by pettype	SELECT max(weight) ,  petType FROM pets GROUP BY petType
pets_1	select max(weight), pettype, stuid from pets group by pettype	SELECT max(weight) ,  petType FROM pets GROUP BY petType
pets_1	select count(distinct petid) from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.age > 20	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
pets_1	select count(*) from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.age > 20	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
pets_1	select count(*) from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.sex = 'F'	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
pets_1	select count(*) from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.sex = "F"	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
pets_1	select count(distinct pettype) from pets	SELECT count(DISTINCT pettype) FROM pets
pets_1	select count(distinct pettype) from pets	SELECT count(DISTINCT pettype) FROM pets
pets_1	select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.pettype = "cat" or t2.pettype = "dog"	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
pets_1	select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.pettype = "cat" or t2.pettype = "dog"	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
pets_1	select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.pettype = "cat" intersect select t1.fname from student as t1 join pets as t2 on t1.stuid = t2.petid where t2.pettype = "dog"	select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
pets_1	select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.pettype = "cat" intersect select t1.fname from student as t1 join pets as t2 on t1.stuid = t2.petid where t2.pettype = "dog"	SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
pets_1	select major, age from student where stuid not in (select stuid from has_pet where pettype = "cat")	SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pets_1	select major, age from student where stuid not in (select stuid from has_pet where pettype = "cat")	SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pets_1	select stuid from student except select stuid from has_pet where pettype = "cat"	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
pets_1	select stuid from student except select stuid from has_pet where pettype = "cat"	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
pets_1	select fname, age from student where stuid in (select stuid from has_pet where pettype = "cat")	SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pets_1	select fname from student where stuid in (select stuid from has_pet where pettype = "cat")	SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pets_1	select pettype, weight from pets order by pet_age asc limit 1	SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
pets_1	select pettype, weight from pets order by pet_age asc limit 1	SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
pets_1	select petid, weight from pets where pet_age > 1	SELECT petid ,  weight FROM pets WHERE pet_age  >  1
pets_1	select petid, weight from pets where pet_age > 1	SELECT petid ,  weight FROM pets WHERE pet_age  >  1
pets_1	select pettype, avg(pet_age), max(pet_age) from pets group by pettype	SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
pets_1	select pettype, avg(pet_age), max(pet_age) from pets group by pettype	SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
pets_1	select pettype, avg(weight) from pets group by pettype	SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
pets_1	select pettype, avg(weight) from pets group by pettype	SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
pets_1	select fname, age from student where stuid in (select stuid from has_pet)	SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
pets_1	select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.petid	SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
pets_1	select petid from has_pet as t1 join student as t2 on t1.stuid = t2.stuid where t2.lname = "Smith"	SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
pets_1	select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.petid where t1.lname = "Smith"	SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
pets_1	select count(*), stuid from has_pet group by stuid	SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
pets_1	select stuid, count(*) from has_pet group by stuid	select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
pets_1	select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.petid group by t2.petid having count(*) > 1	SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
pets_1	select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.petid group by t2.petid having count(*) > 1	SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
pets_1	select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.pettype = "cat" and t2.pet_age = 3	SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
pets_1	select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.pettype = "cat" and t2.age = 3	SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
pets_1	select avg(age) from student where stuid not in (select stuid from has_pet)	select avg(age) from student where stuid not in (select stuid from has_pet)
pets_1	select avg(age) from student where stuid not in (select stuid from has_pet)	select avg(age) from student where stuid not in (select stuid from has_pet)
car_1	select count(*) from continents	SELECT count(*) FROM CONTINENTS;
car_1	select count(*) from continents	SELECT count(*) FROM CONTINENTS;
car_1	select continent, t1.countryname, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid	SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
car_1	select continent, countryname, count(*) from countries group by continent	SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
car_1	select count(*) from countries	SELECT count(*) FROM COUNTRIES;
car_1	select count(*) from countries	SELECT count(*) FROM COUNTRIES;
car_1	select t1.fullname, t1.make, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.maker	SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
car_1	select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id	SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
car_1	select model from cars_data order by horsepower asc limit 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
car_1	select model from cars_data order by horsepower limit 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
car_1	select model from car_names where weight< (select avg(weight) from cars_data)	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
car_1	select model from cars_data where weight< (select avg(weight) from cars_data)	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
car_1	select t1.maker from car_makers as t1 join cars_data as t2 on t1.id = t2.makeid where t2.year = 1970	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
car_1	select distinct t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t2.year = 1970	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
car_1	select make, year from cars order by year limit 1	SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
car_1	select maker, year from car_makers order by year limit 1	SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
car_1	select distinct model from car_names where year > 1980	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
car_1	select distinct model from model_list where year > 1980	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
car_1	select count(*), continent from continents group by continent	SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
car_1	select continent, count(*) from car_makers group by continent	SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
car_1	select countryname from countries group by countryname order by count(*) desc limit 1	SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
car_1	select countryname from car_makers group by countryname order by count(*) desc limit 1	SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
car_1	select count(*), t1.fullname from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.maker	select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
car_1	select count(*), t1.maker, t1.fullname from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.maker	SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
car_1	select t2.accelerated from car_names as t1 join cars_data as t2 on t1.id = t2.id join car_makers as t3 on t2.model = t3.id where t1.make = "amic" and t1.make = "amic" and t3.model = "amic"	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
car_1	select t1.speed from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = "amic" and t2.make = "amic" and t2.make = "amic"	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
car_1	select count(*) from car_makers where countryname = "france"	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
car_1	select count(distinct maker) from countries where countryname = "france"	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
car_1	select count(*) from cars as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = "usa"	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
car_1	select count(*) from car_names as t1 join models as t2 on t1.model = t2.modelid join countries as t3 on t2.country = t3.countryid where t3.country = "United States"	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
car_1	select avg(mpg) from cars_data where cylinders = 4	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
car_1	select avg(mpg) from cars_data where cylinders = 4	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
car_1	select min(weight) from cars_data where year = 1974 and cylinders = 8	select min(weight) from cars_data where cylinders  =  8 and year  =  1974
car_1	select min(weight) from cars_data where year = 1974 and cylinders = 8	select min(weight) from cars_data where cylinders  =  8 and year  =  1974
car_1	select maker, model from model_list	SELECT Maker ,  Model FROM MODEL_LIST;
car_1	select maker, model from model_list	SELECT Maker ,  Model FROM MODEL_LIST;
car_1	select t1.countryname, t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.id group by t1.countryid having count(*) >= 1	SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
car_1	select t1.countryname, t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.id group by t1.countryid having count(*) >= 2	SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
car_1	select count(*) from cars_data where horsepower > 150	SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
car_1	select count(*) from cars_data where horsepower > 150	SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
car_1	select avg(weight), year from cars_data group by year	SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
car_1	select avg(weight), year from cars_data group by year	SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
car_1	select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.countryid join continents as t3 on t2.continent = t3.continent where t3.economic area = "europe" group by t1.countryid having count(*) >= 3	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
car_1	select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.countryid group by t1.countryid having count(*) >= 3	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
car_1	select max(horse), make from cars_data where cylinders = 3	SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
car_1	select max(horsepower), make from cars_data where cylinders = 3	SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
car_1	select model from cars_data group by model order by mpg desc limit 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
car_1	select model from cars_data order by mpg desc limit 1	select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
car_1	select avg(horsepower) from cars_data where year< 1980	SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
car_1	select avg(horsepower) from cars_data where year< 1980	select avg(horsepower) from cars_data where year  <  1980;
car_1	select avg(edispl) from cars_data as t1 join model_list as t2 on t1.model = t2.modelid where t2.model = "volvo"	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
car_1	select avg(edispl) from cars_data as t1 join car_makers as t2 on t1.model = t2.id where t2.model = "volvo"	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
car_1	select max(t2.avg), t1.cylinders from cars_data as t1 join cars_data as t2 on t1.id = t2.cars_data group by t1.cylinders	SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
car_1	select max(t2.avg(t2.avg) from cars_data as t1 join cars_data as t2 on t1.id = t2.cars_data where t1.cylinders = "null"	SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
car_1	select model from car_names group by model order by count(*) desc limit 1	SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
car_1	select modelid from model_list group by modelid order by count(*) desc limit 1	SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
car_1	select count(*) from cars_data where cylinders > 4	SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
car_1	select count(*) from cars_data where cylinders > 4	SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
car_1	select count(*) from cars_data where year = 1980	SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
car_1	select count(*) from car_names where year = 1980	SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
car_1	select count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.modelid where t1.fullname = "American Motor Company"	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
car_1	select count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.modelid where t1.fullname = "American Motor Company"	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
car_1	select t1.fullname, t1.make from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.maker having count(*) > 3	SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
car_1	select t1.maker, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) > 3	SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
car_1	select distinct model from car_makers where fullname = "General Motors" or weight > 3500	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
car_1	select distinct model from model_list as t1 join car_makers as t2 on t1.model = t2.modelid where t2.name = "General Motors" or t2.weight > 3500	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
car_1	select year from cars_data where weight< 3000 intersect select year from cars_data where weight< 4000	select distinct year from cars_data where weight between 3000 and 4000;
car_1	select distinct year from cars_data as t1 join car_makers as t2 on t1.id = t2.maker where t1.weight< 4000 intersect select distinct year from cars_data as t1 join car_makers as t2 on t1.id = t2.maker where t2.weight > 3000	select distinct year from cars_data where weight between 3000 and 4000;
car_1	select horsepower from cars_data order by accelerate desc limit 1	SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
car_1	select horsepower from cars_data order by accelerate desc limit 1	SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
car_1	select t1.cylinders from cars_data as t1 join car_makers as t2 on t1.model = t2.id join car_makers as t3 on t1.car_makers = t3.id where t2.model = "volvo" order by t1.accelerated limit 1	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
car_1	select t1.cylinders from cars_data as t1 join model_list as t2 on t1.model = t2.modelid where t2.model = "volvo" order by t1.accelerated limit 1	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
car_1	select count(*) from cars_data where accelerate > (select max(horsepower) from cars_data)	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
car_1	select count(*) from cars_data where accelerate > (select max(horsepower) from cars_data)	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
car_1	select count(*) from countries group by countryid having count(*) > 2	select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
car_1	select count(*) from countries group by countryid having count(*) > 2	select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
car_1	select count(*) from cars_data where cylinders > 6	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
car_1	select count(*) from cars_data where cylinders > 6	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
car_1	select model from cars_data where cylinders = 4 order by horsepower desc limit 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
car_1	select model from cars_data where cylinders = 4 order by horsepower desc limit 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
car_1	select t1.makeid, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.horsepower > (select min(horsepower) from cars_data) intersect select t1.makeid, t1.make from car_names as t1 join cars_data as t2 on t1.id = t2.makeid where t2.cylinders > 3	SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
car_1	select t1.makeid, t1.car_name from car_names as t1 join cars_data as t2 on t1.id = t2.id where t2.horsepower< 4 group by t1.id	select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
car_1	select max(mpg) from cars_data where cylinders = 8 or year< 1980	select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
car_1	select max(mpg) from cars_data where cylinders = 8 union select max(mpg) from cars_data where year< 1980	select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
car_1	select modelid from model_list where weight< 3500 except select modelid from car_makers where maker = 'Ford Motor Company'	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
car_1	select distinct model from model_list where weight< 3500 except select distinct model from model_list where model = "Ford Motor Company"	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
car_1	select countryname from countries except select countryname from car_makers	SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
car_1	select countryname from countries except select countryname from car_makers	SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
car_1	select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) > 3	select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
car_1	select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car_makers as t1 join car_makers as t2 on t1.maker = t2.id group by t1.id having count(*) > 3	SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
car_1	select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.id join model_list as t3 on t2.modelid = t3.modelid where t2.model = 'fiat' group by t1.countryid having count(*) > 3	SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
car_1	select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.id join model_list as t3 on t2.modelid = t3.modelid where t2.maker = "fiat" group by t1.countryid having count(*) > 3	select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
flight_2	select country from airlines where airline = "JetBlue Airways"	SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
flight_2	select country from airlines where airline = "JoyBlue Airways"	SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
flight_2	select abbreviation from airlines where airline = "JetBlue Airways"	SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
flight_2	select abbreviation from airlines where airline = "JitBlue Airways"	SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
flight_2	select airline, abbreviation from airlines where country = "USA"	SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
flight_2	select airline, abbreviation from airlines where country = 'USA'	SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
flight_2	select airportcode, airportname from airports where city = "Anthony"	SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
flight_2	select airportcode, airportname from airports where city = "Anthony"	SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
flight_2	select count(*) from airlines	SELECT count(*) FROM AIRLINES
flight_2	select count(*) from airlines	SELECT count(*) FROM AIRLINES
flight_2	select count(*) from airports	SELECT count(*) FROM AIRPORTS
flight_2	select count(*) from airports	SELECT count(*) FROM AIRPORTS
flight_2	select count(*) from flights	SELECT count(*) FROM FLIGHTS
flight_2	select count(*) from flights	SELECT count(*) FROM FLIGHTS
flight_2	select airline from airlines where abbreviation = 'UAL'	SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
flight_2	select airline from airlines where abbreviation = 'UAL'	SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
flight_2	select count(*) from airlines where country = 'USA'	SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
flight_2	select count(*) from airlines where country = 'USA'	SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
flight_2	select city, country from airports where airportname = "Alton"	SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
flight_2	select city, country from airports where airportname = "Alton"	SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
flight_2	select airportname from airports where airportcode = 'AKO'	SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
flight_2	select airportname from airports where airportcode = 'AKO'	SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
flight_2	select airportname from airports where city = 'Aberdeen'	SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
flight_2	select airportname from airports where city = "Aberdeen"	SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
flight_2	select count(*) from flights where sourceairport = 'APG'	SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
flight_2	select count(*) from flights where sourceairport = 'APG'	SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.airport = t2.sourceairport where t1.airportcode = "ATO"	SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.airport = t2.sourceairport where t1.airportcode = "ATO"	SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
flight_2	select count(*) from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = "Aberdeen"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.city = t2.city where t1.airportcode = "Aberdeen"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.city = t2.city where t1.city = "Aberdeen"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.city = t2.city where t1.city = "Aberdeen"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select count(*) from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = 'Aberdeen' and t2.airportname = 'Ashley'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.city = t2.city where t1.airportname = "Ashley"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
flight_2	select count(*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.abbreviation = 'JetBlue Airways'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
flight_2	select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.abbreviation = "JetBlue Airways"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
flight_2	select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airportcode = 'ASY'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
flight_2	select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airportcode = "ASY"	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
flight_2	select count(*) from flights where sourceairport = 'AHD'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
flight_2	select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airportcode = "AHD"	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
flight_2	select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.city = 'Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
flight_2	select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.city = "Aberdeen"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
flight_2	select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count(*) desc limit 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
flight_2	select city from airports group by city order by count(*) desc limit 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
flight_2	select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count(*) desc limit 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
flight_2	select city from airports group by city order by count(*) desc limit 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
flight_2	select airportcode from flights group by airportcode order by count(*) desc limit 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
flight_2	select airportcode from flights group by airportcode order by count(*) desc limit 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
flight_2	select airportcode from flights group by airportcode order by count(*) asc limit 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
flight_2	select airportcode from flights group by airportcode order by count(*) asc limit 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
flight_2	select airline from flights group by airline order by count(*) desc limit 1	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
flight_2	select airline from flights group by airline order by count(*) desc limit 1	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
flight_2	select abbreviation, country from airlines order by abbreviation limit 1	SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
flight_2	select abbreviation, country from airlines group by abbreviation order by count(*) limit 1	SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
flight_2	select t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'AHD'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
flight_2	select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "AHD"	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
flight_2	select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'AHD'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
flight_2	select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "AHD"	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
flight_2	select t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'APG' intersect select t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'CVO'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
flight_2	select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'APG' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'CVO'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
flight_2	select distinct t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'CVO' except select t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'APG'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
flight_2	select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'CVO' except select t1.uid from airlines as t1 join airports as t2 on t1.uid = t2.airport where t2.airportcode = 'APG'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
flight_2	select t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid having count(*) >= 10	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
flight_2	select t1.uid from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid having count(*) >= 10	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
flight_2	select distinct t1.aeroport from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.aeroportportcode having count(*)< 200	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
flight_2	select airline from flights group by airline having count(*)< 200	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
flight_2	select t1.flightno from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.name = "United Airlines"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
flight_2	select flightno from airlines where airline = "United Airlines"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
flight_2	select flightno from flights where sourceairport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
flight_2	select flightno from flights where sourceairport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
flight_2	select flightno from flights where sourceairport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
flight_2	select flightno from flights where sourceairport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
flight_2	select t1.flightno from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select t1.flightno from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select t1.flightno from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select t1.flightno from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
flight_2	select count(*) from flights as t1 join airports as t2 on t1.airport = t2.airportcode where t2.city = "Aberdeen" or t2.city = "Abilene"	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
flight_2	select count(*) from airports as t1 join flights as t2 on t1.city = t2.city where t1.city = "Aberdeen" or t1.city = "Abilene"	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
flight_2	select airportname from airports where airportcode not in (select airportcode from flights)	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
flight_2	select airportname from airports except select t1.airportname from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
employee_hire_evaluation	select count(*) from employee	SELECT count(*) FROM employee
employee_hire_evaluation	select count(*) from employee	SELECT count(*) FROM employee
employee_hire_evaluation	select name from employee order by age asc	SELECT name FROM employee ORDER BY age
employee_hire_evaluation	select name from employee order by age asc	SELECT name FROM employee ORDER BY age
employee_hire_evaluation	select city, count(*) from employee group by city	SELECT count(*) ,  city FROM employee GROUP BY city
employee_hire_evaluation	select city, count(*) from employee group by city	SELECT count(*) ,  city FROM employee GROUP BY city
employee_hire_evaluation	select city from employee where age > 30 group by city having count(*) > 1	SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
employee_hire_evaluation	select city from employee where age > 30 group by city having count(*) > 1	SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
employee_hire_evaluation	select location, count(*) from shop group by location	SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
employee_hire_evaluation	select location, count(*) from shop group by location	SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
employee_hire_evaluation	select manager_name, district from shop order by number_products desc limit 1	SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
employee_hire_evaluation	select manager_name, district from shop order by number_products desc limit 1	SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
employee_hire_evaluation	select min(number_products), max(number_products) from shop	SELECT min(Number_products) ,  max(Number_products) FROM shop
employee_hire_evaluation	select min(number_products), max(number_products) from shop	SELECT min(Number_products) ,  max(Number_products) FROM shop
employee_hire_evaluation	select name, location, district from shop order by number_products desc	SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
employee_hire_evaluation	select name, location, district from shop order by number_products desc	SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
employee_hire_evaluation	select name from shop where number_products > (select avg(number_products) from shop)	SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
employee_hire_evaluation	select name from shop where number_products > (select avg(number_products) from shop)	SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
employee_hire_evaluation	select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count(*) desc limit 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
employee_hire_evaluation	select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count(*) desc limit 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
employee_hire_evaluation	select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id order by t2.bonus desc limit 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
employee_hire_evaluation	select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id order by t2.bonus desc limit 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
employee_hire_evaluation	select name from employee where employee_id not in (select employee_id from evaluation)	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
employee_hire_evaluation	select name from employee where employee_id not in (select employee_id from evaluation)	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
employee_hire_evaluation	select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
employee_hire_evaluation	select t2.name from employee as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
employee_hire_evaluation	select name from shop where shop_id not in (select shop_id from hiring)	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
employee_hire_evaluation	select name from shop where shop_id not in (select shop_id from hiring)	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
employee_hire_evaluation	select t2.name, count(*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id	SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
employee_hire_evaluation	select t2.name, count(*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.shop_id	SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
employee_hire_evaluation	select sum(bonus) from evaluation	SELECT sum(bonus) FROM evaluation
employee_hire_evaluation	select sum(bonus) from evaluation	SELECT sum(bonus) FROM evaluation
employee_hire_evaluation	select * from hiring	SELECT * FROM hiring
employee_hire_evaluation	select * from hiring	SELECT * FROM hiring
employee_hire_evaluation	select district from shop where number_products< 3000 intersect select district from shop where number_products > 10000	SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
employee_hire_evaluation	select district from shop where number_products< 3000 intersect select district from shop where number_products > 10000	SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
employee_hire_evaluation	select count(distinct location) from shop	SELECT count(DISTINCT LOCATION) FROM shop
employee_hire_evaluation	select count(distinct location) from shop	SELECT count(DISTINCT LOCATION) FROM shop
cre_Doc_Template_Mgt	select count(*) from documents	SELECT count(*) FROM Documents
cre_Doc_Template_Mgt	select count(*) from documents	SELECT count(*) FROM Documents
cre_Doc_Template_Mgt	select document_id, document_name, document_description from documents	SELECT document_id ,  document_name ,  document_description FROM Documents
cre_Doc_Template_Mgt	select document_id, document_name, document_description from documents	SELECT document_id ,  document_name ,  document_description FROM Documents
cre_Doc_Template_Mgt	select document_name, template_id from documents where document_description like "%w%"	SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
cre_Doc_Template_Mgt	select document_name, template_id from documents where document_description like "%w%"	SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
cre_Doc_Template_Mgt	select document_id, template_id, document_description from documents where document_name = "Robbin CV"	SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
cre_Doc_Template_Mgt	select document_id, template_id, document_description from documents where document_name = "Robbin CV"	SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
cre_Doc_Template_Mgt	select count(distinct template_id) from documents	SELECT count(DISTINCT template_id) FROM Documents
cre_Doc_Template_Mgt	select count(distinct template_id) from documents	SELECT count(DISTINCT template_id) FROM Documents
cre_Doc_Template_Mgt	select count(*) from documents where template_type_code = 'PPT'	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
cre_Doc_Template_Mgt	select count(*) from documents where template_type_code = "PPT"	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
cre_Doc_Template_Mgt	select template_id, count(*) from documents group by template_id	SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
cre_Doc_Template_Mgt	select template_id, count(*) from documents group by template_id	SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
cre_Doc_Template_Mgt	select t1.template_id, t2.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id order by count(*) desc limit 1	SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select t1.template_id, t2.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id order by count(*) desc limit 1	SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select template_id from documents group by template_id having count(*) > 1	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
cre_Doc_Template_Mgt	select template_id from documents group by template_id having count(*) > 1	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
cre_Doc_Template_Mgt	select template_id from templates except select template_id from documents	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
cre_Doc_Template_Mgt	select template_id from templates except select template_id from documents	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
cre_Doc_Template_Mgt	select count(*) from templates	SELECT count(*) FROM Templates
cre_Doc_Template_Mgt	select count(*) from templates	SELECT count(*) FROM Templates
cre_Doc_Template_Mgt	select template_id, version_number, template_type_code from templates	SELECT template_id ,  version_number ,  template_type_code FROM Templates
cre_Doc_Template_Mgt	select template_id, version_number, template_type_code from templates	SELECT template_id ,  version_number ,  template_type_code FROM Templates
cre_Doc_Template_Mgt	select distinct template_type_code from templates	SELECT DISTINCT template_type_code FROM Templates
cre_Doc_Template_Mgt	select distinct template_type_code from templates	SELECT DISTINCT template_type_code FROM Templates
cre_Doc_Template_Mgt	select template_id from templates where template_type_code = "PP" or template_type_code = "PPT"	SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
cre_Doc_Template_Mgt	select template_id from templates where template_type_code = "PP" or template_type_code = "PPT"	SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
cre_Doc_Template_Mgt	select count(*) from templates where template_type_code = "CV"	SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
cre_Doc_Template_Mgt	select count(*) from templates where template_type_code = "CV"	SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
cre_Doc_Template_Mgt	select version_number, template_type_code from templates where version_number > 5	SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
cre_Doc_Template_Mgt	select version_number, template_type_code from templates where version_number > 5	SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
cre_Doc_Template_Mgt	select template_type_code, count(*) from templates group by template_type_code	SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
cre_Doc_Template_Mgt	select template_type_code, count(*) from templates group by template_type_code	SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
cre_Doc_Template_Mgt	select template_type_code from templates group by template_type_code order by count(*) desc limit 1	SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select template_type_code from templates group by template_type_code order by count(*) desc limit 1	SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select template_type_code from templates group by template_type_code having count(*)< 3	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
cre_Doc_Template_Mgt	select template_type_code from templates group by template_type_code having count(*)< 3	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
cre_Doc_Template_Mgt	select min(version_number), template_type_code from templates	SELECT min(Version_Number) ,  template_type_code FROM Templates
cre_Doc_Template_Mgt	select version_number, template_type_code from templates order by version_number asc limit 1	SELECT min(Version_Number) ,  template_type_code FROM Templates
cre_Doc_Template_Mgt	select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = "Data base"	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
cre_Doc_Template_Mgt	select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = "Data base"	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
cre_Doc_Template_Mgt	select document_name from documents where template_type_code = "BK"	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
cre_Doc_Template_Mgt	select t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = "BK"	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
cre_Doc_Template_Mgt	select template_type_code, count(*) from documents group by template_type_code	SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
cre_Doc_Template_Mgt	select template_type_code, count(*) from documents group by template_type_code	SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
cre_Doc_Template_Mgt	select template_type_code from documents group by template_type_code order by count(*) desc limit 1	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select template_type_code from documents group by template_type_code order by count(*) desc limit 1	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select template_type_code from templates except select template_type_code from documents	SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
cre_Doc_Template_Mgt	select template_type_code from templates except select template_type_code from documents	SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
cre_Doc_Template_Mgt	select template_type_code, template_type_description from ref_template_types	SELECT template_type_code ,  template_type_description FROM Ref_template_types
cre_Doc_Template_Mgt	select template_type_code, template_type_description from ref_template_types	SELECT template_type_code ,  template_type_description FROM Ref_template_types
cre_Doc_Template_Mgt	select template_type_description from ref_template_types where template_type_code = "AD"	SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
cre_Doc_Template_Mgt	select template_type_description from ref_template_types where template_type_code = "AD"	SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
cre_Doc_Template_Mgt	select template_type_code from ref_template_types where template_type_description = "Book"	SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
cre_Doc_Template_Mgt	select template_type_code from ref_template_types where template_type_description = "Book"	SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
cre_Doc_Template_Mgt	select distinct t1.template_type_description from ref_template_types as t1 join documents as t2 on t1.template_type_code = t2.template_type_code	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
cre_Doc_Template_Mgt	select distinct t1.document_description from ref_template_types as t1 join documents as t2 on t1.template_type_code = t2.template_type_code	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
cre_Doc_Template_Mgt	select template_id from ref_template_types where template_type_description = "Presentation"	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
cre_Doc_Template_Mgt	select template_id from ref_template_types where template_type_description = "Presentation"	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
cre_Doc_Template_Mgt	select count(*) from paragraphs	SELECT count(*) FROM Paragraphs
cre_Doc_Template_Mgt	select count(*) from paragraphs	SELECT count(*) FROM Paragraphs
cre_Doc_Template_Mgt	select count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Summer Show"	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
cre_Doc_Template_Mgt	select count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Summer Show"	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
cre_Doc_Template_Mgt	select other_details from paragraphs where paragraph_text = "Korea"	select other_details from paragraphs where paragraph_text like 'korea'
cre_Doc_Template_Mgt	select other_details from paragraphs where paragraph_text like "%korea%"	select other_details from paragraphs where paragraph_text like 'korea'
cre_Doc_Template_Mgt	select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Welcome to NY"	SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
cre_Doc_Template_Mgt	select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.paragraph_id = t2.paragraph_id where t2.document_name = "Welcome to NY"	SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
cre_Doc_Template_Mgt	select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Customer reviews"	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
cre_Doc_Template_Mgt	select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Customer reviews"	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
cre_Doc_Template_Mgt	select document_id, count(*) from paragraphs group by document_id order by document_id	SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
cre_Doc_Template_Mgt	select document_id, count(*) from paragraphs group by document_id order by document_id	SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
cre_Doc_Template_Mgt	select document_id, document_name, count(*) from paragraphs group by document_id	SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
cre_Doc_Template_Mgt	select document_id, document_name, count(*) from paragraphs group by document_id	SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
cre_Doc_Template_Mgt	select document_id from paragraphs group by document_id having count(*) >= 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
cre_Doc_Template_Mgt	select document_id from paragraphs group by document_id having count(*) >= 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
cre_Doc_Template_Mgt	select t1.document_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1	SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select t1.document_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1	SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
cre_Doc_Template_Mgt	select document_id from paragraphs group by document_id order by count(*) asc limit 1	SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
cre_Doc_Template_Mgt	select document_id from paragraphs group by document_id order by count(*) asc limit 1	SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
cre_Doc_Template_Mgt	select document_id from paragraphs group by document_id having count(*) between 1 and 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
cre_Doc_Template_Mgt	select document_id from paragraphs group by document_id having count(*) between 1 and 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
cre_Doc_Template_Mgt	select document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland'	SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
cre_Doc_Template_Mgt	select document_id from paragraphs where paragraph_text like '%brazil%' intersect select document_id from paragraphs where paragraph_text like '%ireland%'	SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
course_teach	select count(*) from teacher	SELECT count(*) FROM teacher
course_teach	select count(*) from teacher	SELECT count(*) FROM teacher
course_teach	select name from teacher order by age asc	SELECT Name FROM teacher ORDER BY Age ASC
course_teach	select name from teacher order by age asc	SELECT Name FROM teacher ORDER BY Age ASC
course_teach	select age, hometown from teacher	SELECT Age ,  Hometown FROM teacher
course_teach	select age, hometown from teacher	SELECT Age ,  Hometown FROM teacher
course_teach	select name from teacher where hometown!= 'Little Lever Urban District'	select name from teacher where hometown != "little lever urban district"
course_teach	select name from teacher where hometown!= ''Little Lever Urban District''	select name from teacher where hometown != "little lever urban district"
course_teach	select name from teacher where age = 32 or age = 33	SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
course_teach	select name from teacher where age = 32 or age = 33	SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
course_teach	select hometown from teacher order by age limit 1	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
course_teach	select hometown from teacher order by age limit 1	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
course_teach	select hometown, count(*) from teacher group by hometown	SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
course_teach	select hometown, count(*) from teacher group by hometown	SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
course_teach	select hometown from teacher group by hometown order by count(*) desc limit 1	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
course_teach	select hometown from teacher group by hometown order by count(*) desc limit 1	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
course_teach	select hometown from teacher group by hometown having count(*) >= 2	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
course_teach	select hometown from teacher group by hometown having count(*) >= 2	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
course_teach	select t2.name, t1.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
course_teach	select t2.name, t1.course from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
course_teach	select t2.name, t1.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id order by t2.name asc	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
course_teach	select t2.name, t1.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id order by t2.name	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
course_teach	select t2.name from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id where t1.course = 'Math'	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
course_teach	select t2.name from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id where t1.course = 'Math'	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
course_teach	select t2.name, count(*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name	SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
course_teach	select t2.name, count(*) from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name	SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
course_teach	select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2	SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
course_teach	select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2	SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
course_teach	select name from teacher where teacher_id not in (select teacher_id from course_arrange)	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
course_teach	select name from teacher where teacher_id not in (select teacher_id from course_arrange)	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
museum_visit	select count(*) from visitor where age< 30	SELECT count(*) FROM visitor WHERE age  <  30
museum_visit	select name from visitor where level_of_membership > 4 order by level_of_membership	SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
museum_visit	select avg(age) from visitor where level_of_membership imunitar imunitar	SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
museum_visit	select name, level_of_membership from visitor where level_of_membership > 4 order by age desc	SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
museum_visit	select t1.museum_id, t1.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id join museum as t3 on t2.museum_id = t3.museum_id group by t1.museum_id order by num_of_staff desc limit 1	SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
museum_visit	select avg(num_of_staff) from museum where open_year< 2009	SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
museum_visit	select open_year, num_of_staff from museum where name = "Plaza Museum"	SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
museum_visit	select name from museum where num_of_staff > (select min(num_of_staff) from museum where open_year > 2010)	SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
museum_visit	select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t2.museum_id = t3.museum_id group by t1.id having count(*) > 1	SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
museum_visit	select t1.id, t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum(total_spent) desc limit 1	SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
museum_visit	select t1.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by count(*) desc limit 1	SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
museum_visit	select name from museum where museum_id not in (select museum_id from visit)	SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
museum_visit	select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.num_of_ticket) desc limit 1	SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
museum_visit	select avg(num_of_ticket), max(num_of_ticket) from visit	SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
museum_visit	select sum(total_spent) from visit as t1 join visitor as t2 on t1.visit_id = t2.id where t2.level_of_membership = 1	SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
museum_visit	select t2.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id where t1.open_year< 2009 intersect select t2.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id where t1.open_year > 2011	SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
museum_visit	select count(*) from visitor where id not in (select visitor_id from visit where open_year > 2010)	SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
museum_visit	select count(*) from museum where open_year > 2013 or open_year< 2008	SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
wta_1	select count(*) from players	SELECT count(*) FROM players
wta_1	select count(*) from players	SELECT count(*) FROM players
wta_1	select count(*) from matches	SELECT count(*) FROM matches
wta_1	select count(*) from matches	SELECT count(*) FROM matches
wta_1	select first_name, birth_date from players where country_code = 'USA'	SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
wta_1	select first_name, birth_date from players where country_code = 'USA'	SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
wta_1	select avg(loser_age), avg(winner_ioc) from matches	SELECT avg(loser_age) ,  avg(winner_age) FROM matches
wta_1	select avg(loser_age), avg(winner_ioc) from matches	SELECT avg(loser_age) ,  avg(winner_age) FROM matches
wta_1	select avg(winner_rank) from matches	SELECT avg(winner_rank) FROM matches
wta_1	select avg(winner_rank) from rankings as t1 join matches as t2 on t1.winner_id = t2.winner_id group by t2.winner_id	SELECT avg(winner_rank) FROM matches
wta_1	select max(loser_rank) from matches	SELECT min(loser_rank) FROM matches
wta_1	select best_rank from matches order by loser_rank_points desc limit 1	SELECT min(loser_rank) FROM matches
wta_1	select count(distinct country_code) from players	SELECT count(DISTINCT country_code) FROM players
wta_1	select count(distinct country_code) from players	SELECT count(DISTINCT country_code) FROM players
wta_1	select count(distinct loser_name) from matches	SELECT count(DISTINCT loser_name) FROM matches
wta_1	select count(distinct loser_name) from matches	SELECT count(DISTINCT loser_name) FROM matches
wta_1	select tourney_name from matches group by tourney_name having count(*) > 10	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
wta_1	select tourney_name from matches group by tourney_name having count(*) > 10	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
wta_1	select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016	SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
wta_1	select t1.winner_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.year = 2013 intersect select t1.winner_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id where t2.year = 2016	SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
wta_1	select count(*) from matches where year = 2013 or year = 2016	SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
wta_1	select count(*) from matches where year = 2013 or year = 2016	SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
wta_1	select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tournament_name = "WTA Championships" intersect select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tournament_name = "Australian Open"	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
wta_1	select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tournament_name = "WTA Championships" intersect select t1.first_name, t1.country_code from players as t1 join rankings as t2 on t1.player_id = t2.player_id where t2.tournament_name = "Australian Open"	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
wta_1	select first_name, country_code from players order by birth_date desc limit 1	SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
wta_1	select first_name, country_code from players order by birth_date desc limit 1	SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
wta_1	select first_name, last_name from players order by birth_date	SELECT first_name ,  last_name FROM players ORDER BY birth_date
wta_1	select first_name, last_name from players order by birth_date	SELECT first_name ,  last_name FROM players ORDER BY birth_date
wta_1	select first_name, last_name from players where hand = "L" order by birth_date	SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
wta_1	select first_name, last_name from players where hand = "left" order by birth_date	SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
wta_1	select t1.first_name, t1.country_code from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
wta_1	select t1.first_name, t1.country_code from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
wta_1	select year from matches group by year order by count(*) desc limit 1	SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
wta_1	select year from matches group by year order by count(*) desc limit 1	SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
wta_1	select t1.winner_name, t1.winner_rank_points from winners as t1 join rankings as t2 on t1.winner_id = t2.winner_id group by t1.winner_id order by count(*) desc limit 1	SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
wta_1	select t2.winner_name, t1.winner_rank_points from rankings as t1 join matches as t2 on t1.player_id = t2.winner_id group by t2.winner_id order by count(*) desc limit 1	SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
wta_1	select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id = t2.winner_id join tourney_name as t3 on t2.tournament_id = t3.tournament_id where t3.tournament_name = "Australian Open" order by t1.winner_rank_points desc limit 1	SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
wta_1	select t1.winner_name, t1.winner_rank_points from matches as t1 join rankings as t2 on t1.turner_id = t2.turner_id where t2.tournament_name = "Australian Open" group by t1.winner_rank_points order by count(*) desc limit 1	SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
wta_1	select t1.loser_name, t1.winner_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id order by t2.minutes desc limit 1	SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
wta_1	select t2.winner_name, t2.loser_name from matches as t1 join winners as t2 on t1.winner_id = t2.winner_id order by t1.minutes desc limit 1	SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
wta_1	select avg(ranking), first_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.first_name	SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
wta_1	select t1.first_name, t2.ranking_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name	SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
wta_1	select sum(ranking_points), first_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id	SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
wta_1	select t1.first_name, sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id	SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
wta_1	select country_code, count(*) from players group by country_code	SELECT count(*) ,  country_code FROM players GROUP BY country_code
wta_1	select country_code, count(*) from players group by country_code	SELECT count(*) ,  country_code FROM players GROUP BY country_code
wta_1	select country_code from players group by country_code order by count(*) desc limit 1	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
wta_1	select country_code from players group by country_code order by count(*) desc limit 1	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
wta_1	select country_code from players group by country_code having count(*) > 50	SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
wta_1	select country_code from players group by country_code having count(*) > 50	SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
wta_1	select ranking_date, sum(tours) from rankings group by ranking_date	SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
wta_1	select ranking_date, sum(tours) from rankings group by ranking_date	SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
wta_1	select year, count(*) from matches group by year	SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
wta_1	select year, count(*) from matches group by year	SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
wta_1	select t2.winner_name, t2.winner_rank from matches as t1 join rankings as t2 on t1.winner_id = t2.winner_id group by t2.winner_id order by t1.winner_age limit 3	SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
wta_1	select winner_name, winner_rank from matches order by winner_age asc limit 3	SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
wta_1	select count(distinct winner_id) from matches where tourney_name = "WTA Championships" intersect select count(distinct winner_id) from matches where tourney_name = "WTA Championships"	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
wta_1	select count(distinct winner_hand) from matches where tourney_name = "WTA Championships"	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
wta_1	select t1.winner_name, t1.country_code, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id order by t2.winner_rank_points desc limit 1	SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
wta_1	select t1.first_name, t1.country_code, t1.birth_date from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1	SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
wta_1	select hand, count(*) from players group by hand	SELECT count(*) ,  hand FROM players GROUP BY hand
wta_1	select hand, count(*) from players group by hand	SELECT count(*) ,  hand FROM players GROUP BY hand
battle_death	select count(*) from ship where disposition_of_ship = 'Captured'	SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
battle_death	select name, tonnage from ship order by name desc	SELECT name ,  tonnage FROM ship ORDER BY name DESC
battle_death	select name, date, result from battle	SELECT name ,  date FROM battle
battle_death	select max(t1.tonnage), min(t1.tonnage), t1.id from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id	SELECT max(killed) ,  min(killed) FROM death
battle_death	select avg(injured), t1.id from death as t1 join death as t2 on t1.duration_by_ship_id = t2.id group by t1.id	SELECT avg(injured) FROM death
battle_death	select killed, injured from death as t1 join caused_by_ship_id as t2 on t1.id = t2.id where t2.tonnage = 't'	SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
battle_death	select name, result from battle where bulgarian_commander!= "Boril"	SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
battle_death	select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = 'Brig'	SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
battle_death	select t1.id, t1.name from battle as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id having sum(t2.death) > 10	SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
battle_death	select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1	SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
battle_death	select distinct name from battle where bulgarian_commander = 'Kaloyan' intersect select distinct name from battle where latin_commander = 'Baldwin I'	SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
battle_death	select count(distinct result) from battle	SELECT count(DISTINCT RESULT) FROM battle
battle_death	select count(*) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' );	SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
battle_death	select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'Lettice' intersect select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'HMS Atalanta'	SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
battle_death	select name, result, bulgarian_commander from battle where id not in (select lost_in_battle from ship where location = 'English Channel')	SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
battle_death	select note from death where death like "%east%"	SELECT note FROM death WHERE note LIKE '%East%'
student_transcripts_tracking	select address_id from addresses where line_1 and line_2 intersect select address_id from addresses where line_1 and line_2!= "1"	SELECT line_1 ,  line_2 FROM addresses
student_transcripts_tracking	select line_1, line_2 from addresses	SELECT line_1 ,  line_2 FROM addresses
student_transcripts_tracking	select count(*) from courses	SELECT count(*) FROM Courses
student_transcripts_tracking	select count(*) from courses	SELECT count(*) FROM Courses
student_transcripts_tracking	select course_description from courses where course_name = "math"	SELECT course_description FROM Courses WHERE course_name  =  'math'
student_transcripts_tracking	select course_description from courses where course_name = "math"	SELECT course_description FROM Courses WHERE course_name  =  'math'
student_transcripts_tracking	select zip_postcode from addresses where city = "Port Chelsea"	SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
student_transcripts_tracking	select zip_postcode from addresses where city = "Port Chelsea"	SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
student_transcripts_tracking	select t1.department_name, t2.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t2.department_id order by count(*) desc limit 1	SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t2.department_name, t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1	select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
student_transcripts_tracking	select count(distinct department_id) from degree_programs	SELECT count(DISTINCT department_id) FROM Degree_Programs
student_transcripts_tracking	select count(distinct department_id) from degree_programs	SELECT count(DISTINCT department_id) FROM Degree_Programs
student_transcripts_tracking	select count(distinct degree_summary_name) from degree_programs	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
student_transcripts_tracking	select count(distinct degree_program_id) from degree_programs	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
student_transcripts_tracking	select count(*) from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id where t2.department_description like "%engineer%"	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
student_transcripts_tracking	select count(*) from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id where t2.department_name = 'Engineering'	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
student_transcripts_tracking	select section_name, section_description from sections	SELECT section_name ,  section_description FROM Sections
student_transcripts_tracking	select section_name, section_description from sections	SELECT section_name ,  section_description FROM Sections
student_transcripts_tracking	select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*)< = 2	SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
student_transcripts_tracking	select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*)< 2	SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
student_transcripts_tracking	select section_name from sections order by section_name desc	SELECT section_name FROM Sections ORDER BY section_name DESC
student_transcripts_tracking	select section_name from sections order by section_name desc	SELECT section_name FROM Sections ORDER BY section_name DESC
student_transcripts_tracking	select t1.semester_name, t1.student_id from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1	SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t1.semester_name, t1.student_id from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1	SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select department_description from departments where department_name like "%substring%"	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
student_transcripts_tracking	select department_description from departments where department_name like "%computer%"	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
student_transcripts_tracking	select t1.first_name, t1.mid_name, t1.last_name, t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id join degree_programs as t3 on t2.degree_program_id = t3.degree_program_id group by t1.student_id having count(*) = 2	SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
student_transcripts_tracking	select t1.first_name, t1.mid_name, t1.last_name, t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id having count(*) = 2	SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
student_transcripts_tracking	select t1.first_name, t1.mid_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id join degree_programs as t3 on t2.degree_program_id = t3.degree_program_id where t3.degree_summary_name = 'Bachelor'	SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
student_transcripts_tracking	select t1.first_name, t1.mid_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id where t2.degree_program_id = 'BA'	SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
student_transcripts_tracking	select degree_program_id from student_enrolment group by degree_program_id order by count(*) desc limit 1	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t2.degree_summary_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t2.degree_summary_name order by count(*) desc limit 1	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select degree_program_id, degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t2.degree_program_id order by count(*) desc limit 1	SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t2.degree_program_id, t2.degree_summary_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t2.degree_program_id order by count(*) desc limit 1	SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t1.student_id, t2.first_name, t2.middle_name, t2.last_name, count(*) from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1	SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t1.first_name, t1.mid_name, t1.last_name, count(*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1	SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
student_transcripts_tracking	select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
student_transcripts_tracking	select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
student_transcripts_tracking	select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
student_transcripts_tracking	select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count(*) desc limit 1	SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count(*) desc limit 1	SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select last_name from students where current_address_id in (select student_id from student_enrolment)	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
student_transcripts_tracking	select last_name from students where address_id not in (select student_id from student_enrolment)	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
student_transcripts_tracking	select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id having count(*) >= 2	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
student_transcripts_tracking	select t1.transcript_date, t1.transcript_id from transcripts as t1 join courses as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*) >= 2	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
student_transcripts_tracking	select cell_mobile_number from students where first_name = "Timmothy" and last_name = "Ward"	SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
student_transcripts_tracking	select cell_mobile_number from students where first_name = "Timmothy" and last_name = "Ward"	select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
student_transcripts_tracking	select first_name, middle_name, last_name from students order by date_first_registered asc limit 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
student_transcripts_tracking	select first_name, middle_name, last_name from students order by date_first_registered asc limit 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
student_transcripts_tracking	select first_name, middle_name, last_name from students order by date_first_registered asc limit 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
student_transcripts_tracking	select first_name, middle_name, last_name from students order by date_first_registered limit 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
student_transcripts_tracking	select first_name from students where permanent_address_id not in (select current_address_id from addresses)	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
student_transcripts_tracking	select first_name from students where permanent_address_id not in (select current_address_id from students)	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
student_transcripts_tracking	select t1.address_id, t1.line_1 from addresses as t1 join students as t2 on t1.address_id = t2.address_id group by t1.address_id order by count(*) desc limit 1	SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t1.address_id, t1.line_1, t1.line_2 from addresses as t1 join students as t2 on t1.address_id = t2.address_id group by t1.address_id order by count(*) desc limit 1	SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select avg(transcript_date) from transcripts	SELECT avg(transcript_date) FROM Transcripts
student_transcripts_tracking	select avg(transcript_date) from transcripts	SELECT avg(transcript_date) FROM Transcripts
student_transcripts_tracking	select transcript_date, other_details from transcripts order by transcript_date asc limit 1	SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
student_transcripts_tracking	select t1.date_first_registered, t1.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id order by t1.transcript_date asc limit 1	SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
student_transcripts_tracking	select count(*) from transcripts	SELECT count(*) FROM Transcripts
student_transcripts_tracking	select count(*) from transcripts	SELECT count(*) FROM Transcripts
student_transcripts_tracking	select max(transcript_date) from transcripts	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
student_transcripts_tracking	select max(transcript_date) from transcripts	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
student_transcripts_tracking	select count(*), t1.course_id from transcript_contents as t1 join student_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_id	SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select t1.course_name, count(*) from courses as t1 join transcript_contents as t2 on t1.course_id = t2.course_id group by t1.course_id	SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
student_transcripts_tracking	select transcript_date, transcript_id from transcript_contents group by transcript_id order by count(*) asc limit 1	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
student_transcripts_tracking	select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
student_transcripts_tracking	select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id join degree_programs as t3 on t2.degree_program_id = t3.degree_program_id where t3.degree_summary_name = 'Master' intersect select t1.semester_id join student_enrolment as t2 on t1.semester_id = t2.semester_id join degree_programs as t3 on t2.semester_id = t3.degree_id where t3.degree_summary_name = 'Bachelor'	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
student_transcripts_tracking	select semester_id from student_enrolment where student_id = 'MA' intersect select semester_id from student_enrolment where student_id = 'BA'	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
student_transcripts_tracking	select count(distinct address_id) from students	SELECT count(DISTINCT current_address_id) FROM Students
student_transcripts_tracking	select distinct t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.address_id	SELECT count(DISTINCT current_address_id) FROM Students
student_transcripts_tracking	select other_student_details from students order by other_student_details desc	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
student_transcripts_tracking	select other_student_details from students order by other_student_details desc	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
student_transcripts_tracking	select section_name from sections where section_description like "%h%"	SELECT section_description FROM Sections WHERE section_name  =  'h'
student_transcripts_tracking	select section_description from sections where section_name = "h"	SELECT section_description FROM Sections WHERE section_name  =  'h'
student_transcripts_tracking	select first_name from students where permanent_address_id in (select current_address_id from addresses where country = "Haiti") or cell_mobile_number = "09700166582"	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
student_transcripts_tracking	select first_name from students where permanent_address_id = "Haiti" or cell_mobile_number = "09700166582"	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
tvshow	select title from cartoon order by title	SELECT Title FROM Cartoon ORDER BY title
tvshow	select title from cartoon order by title	SELECT Title FROM Cartoon ORDER BY title
tvshow	select title from cartoon where directed_by = "Ben Jones"	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
tvshow	select title from cartoon where directed_by = "Ben Jones"	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
tvshow	select count(*) from cartoon where written_by = "Joseph Kuhr"	SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
tvshow	select count(*) from cartoon where written_by = "Joseph Kuhr"	SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
tvshow	select title, directed_by from cartoon order by air_date	SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
tvshow	select title, directed_by from cartoon order by air_date	SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
tvshow	select title from cartoon where directed_by = "Ben Jones" or directed_by = "Brandon Vietti"	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
tvshow	select title from cartoon where directed_by = "Ben Jones" or directed_by = "Brandon Vietti"	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
tvshow	select country, count(*) from tv_channel group by country order by count(*) desc limit 1	SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
tvshow	select country, count(*) from tv_channel group by country order by count(*) desc limit 1	SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
tvshow	select count(distinct series_name), content from tv_channel	SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
tvshow	select count(distinct series_name), content from tv_channel	SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
tvshow	select content from tv_channel where series_name = "Sky Radio"	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
tvshow	select content from tv_channel where series_name = "Sky Radio"	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
tvshow	select package_option from tv_channel where series_name = "Sky Radio"	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
tvshow	select package_option from tv_channel where series_name = "Sky Radio"	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
tvshow	select count(*) from tv_channel where language = "English"	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
tvshow	select count(*) from tv_channel where language = "English"	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
tvshow	select language, count(*) from tv_channel group by language order by count(*) asc limit 1	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
tvshow	select language, count(*) from tv_channel group by language order by count(*) asc limit 1	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
tvshow	select language, count(*) from tv_channel group by language	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
tvshow	select language, count(*) from tv_channel group by language	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
tvshow	select t1.series_name from tv_channel as t1 join cartoon as t2 on t1.id = t2.t2.t2.t2.t2.t1.id where t2.title = "The Rise of the blue betle!"	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
tvshow	select t1.series_name from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.title = "The Rise of the blue betle"	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
tvshow	select t1.title from cartoon as t1 join tv_series as t2 on t1.id = t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t3.t3.t3.t3.t3.t3.t4.t3.id = t2.t3.id where t2.series_name = "Sky Radio"	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
tvshow	select t1.title from cartoon as t1 join tv_channel as t2 on t1.id = t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t3.t3.t3.t3.t3.t3.t3.t4.t3.t3.t3.t4.t3.t3.t4.t3.t2.t3.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
tvshow	select episode from tv_series order by rating	SELECT Episode FROM TV_series ORDER BY rating
tvshow	select episode from tv_series order by rating	SELECT Episode FROM TV_series ORDER BY rating
tvshow	select episode, rating from tv_series order by rating desc limit 3	SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
tvshow	select episode, rating from tv_series order by rating desc limit 3	SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
tvshow	select min(share), max(share) from tv_series	SELECT max(SHARE) , min(SHARE) FROM TV_series;
tvshow	select max(share), min(share) from tv_series	SELECT max(SHARE) , min(SHARE) FROM TV_series;
tvshow	select air_date from tv_series where episode = "A love of a Lifetime"	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
tvshow	select air_date from tv_series where episode = "A love of a Lifetime"	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
tvshow	select weekly_rank from tv_series where episode = "A love of a Lifetime"	SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
tvshow	select weekly_rank from tv_series where episode = "A love of a Lifetime"	SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
tvshow	select t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t3.t3.t3.t3.t3.t3.t3.t3.t2.t3.t3.t4.t3.t3.t3.t4.t3.t3.t2.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t3.t4.t3.t4.t3.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t3.t4.t	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
tvshow	select t1.series_name from tv_series as t1 join cartoon as t2 on t1.id = t2.animal_id where t1.episode = "A love of a Lifetime"	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
tvshow	select t1.episode from tv_series as t1 join tv_channel as t2 on t1.id = t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t3.id join tv_channel as t3 on t2.t3.id = t2.t3.id where t2.series_name = "Sky Radio"	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
tvshow	select t1.episode from tv_series as t1 join tv_channel as t2 on t1.id = t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t2.t3.id = t2.episode from t2.t3.t2.t3.id = t2.t3.id where t2.series_name = "Sky Radio"	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
tvshow	select directed_by, count(*) from cartoon group by directed_by	SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
tvshow	select directed_by, count(*) from cartoon group by directed_by	SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
tvshow	select production_code, channel from cartoon order by air_date desc limit 1	select production_code ,  channel from cartoon order by original_air_date desc limit 1
tvshow	select production_code, channel from cartoon order by date desc limit 1	select production_code ,  channel from cartoon order by original_air_date desc limit 1
tvshow	select t2.package_option, t2.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.hight_definition_tv = 1	SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
tvshow	select t2.package_option, t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.hight_definition_tv = "Yes"	SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
tvshow	select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.written_by where t2.written_by = "Todd Casey"	SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
tvshow	select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.written_by where t2.written_by = "Todd Casey"	SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
tvshow	select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.written_by where t2.written_by = "Todd Casey"	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
tvshow	select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.written_by where t2.written_by = "Todd Casey"	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
tvshow	select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.directed_by where t2.directed_by = 'Ben Jones' intersect select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = 'Michael Chang'	SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
tvshow	select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = "Ben Jones" intersect select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = "Michael Chang"	SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
tvshow	select pixel_aspect_ratio_par, country from tv_channel where language!= "English"	SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
tvshow	select pixel_aspect_ratio_par, country from tv_channel where language!= 'English'	SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
tvshow	select id from tv_channel group by country having count(*) > 2	SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
tvshow	select id from tv_channel group by id having count(*) > 2	SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
tvshow	select t1.id from tv_channel as t1 join cartoon as t2 on t1.id = t2.directed_by where t2.directed_by!= "Ben Jones"	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
tvshow	select t1.id from tv_channel as t1 join cartoon as t2 on t1.id = t2.directed_by where t2.title!= "Ben Jones"	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
tvshow	select package_option from tv_channel except select package_option from cartoon where directed_by = "Ben Jones"	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
tvshow	select package_option from tv_channel except select package_option from cartoon where directed_by = "Ben Jones"	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
poker_player	select count(*) from poker_player	SELECT count(*) FROM poker_player
poker_player	select count(*) from poker_player	SELECT count(*) FROM poker_player
poker_player	select earnings from poker_player order by earnings desc	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
poker_player	select earnings from poker_player order by earnings desc	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
poker_player	select final_table_made, best_finish from poker_player	SELECT Final_Table_Made ,  Best_Finish FROM poker_player
poker_player	select final_table_made, best_finish from poker_player	SELECT Final_Table_Made ,  Best_Finish FROM poker_player
poker_player	select avg(employers) from poker_player	SELECT avg(Earnings) FROM poker_player
poker_player	select avg(employers) from poker_player	SELECT avg(Earnings) FROM poker_player
poker_player	select money_rank from poker_player order by earnings desc limit 1	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
poker_player	select money_rank from poker_player order by earnings desc limit 1	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
poker_player	select max(final_table_made) from poker_player where earnings< 200000	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
poker_player	select max(final_table_made) from poker_player where earnings< 200000	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t1.employers > 300000	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t1.employers > 300000	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.final_table_made asc	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
poker_player	select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.final_table_made asc	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
poker_player	select t2.birth_date from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.employers limit 1	SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
poker_player	select t2.birth_date from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.employers limit 1	SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
poker_player	select money_rank from poker_player order by height desc limit 1	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
poker_player	select money_rank from poker_player order by height desc limit 1	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
poker_player	select avg(employers) from poker_player where height > 200	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
poker_player	select avg(t1.employers) from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 200	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.employers desc	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
poker_player	select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.employers desc	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
poker_player	select nationality, count(*) from people group by nationality	SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
poker_player	select nationality, count(*) from people group by nationality	SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
poker_player	select nationality from people group by nationality order by count(*) desc limit 1	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
poker_player	select nationality from people group by nationality order by count(*) desc limit 1	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
poker_player	select nationality from people group by nationality having count(*) >= 2	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
poker_player	select nationality from people group by nationality having count(*) >= 2	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
poker_player	select name, birth_date from people order by name asc	SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
poker_player	select name, birth_date from people order by name	SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
poker_player	select name from people where nationality!= "Russia"	SELECT Name FROM people WHERE Nationality != "Russia"
poker_player	select name from people where nationality!= 'Russia'	SELECT Name FROM people WHERE Nationality != "Russia"
poker_player	select name from people where people_id not in (select people_id from poker_player)	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
poker_player	select name from people where people_id not in (select people_id from poker_player)	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
poker_player	select count(distinct nationality) from people	SELECT count(DISTINCT Nationality) FROM people
poker_player	select count(distinct nationality) from people	SELECT count(DISTINCT Nationality) FROM people
voter_1	select count(distinct state) from area_code_state	SELECT count(*) FROM area_code_state
voter_1	select contestant_number, contestant_name from contestants order by contestant_name desc	SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
voter_1	select vote_id, phone_number, state from votes	SELECT vote_id ,  phone_number ,  state FROM votes
voter_1	select max(area_code), min(area_code) from area_code_state	SELECT max(area_code) ,  min(area_code) FROM area_code_state
voter_1	select last(created) from votes where state = "CA"	SELECT max(created) FROM votes WHERE state  =  'CA'
voter_1	select contestant_name from contestants where contestant_name!= 'Jessie Alloway'	SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
voter_1	select distinct state, created from votes	SELECT DISTINCT state ,  created FROM votes
voter_1	select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t2.contestant_number having count(*) >= 2	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
voter_1	select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number order by t2.vote_id limit 1	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
voter_1	select count(*) from votes where state = 'NY' or state = 'CA'	SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
voter_1	select count(*) from contestants where contestant_number not in (select contestant_number from votes)	SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
voter_1	select area_code from votes group by area_code order by count(*) desc limit 1	SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
voter_1	select created, state, phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = 'Tabatha Gehling'	SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
voter_1	select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code = t2.area_code join contestants as t3 on t2.contestant_number = t3.contestant_number where t3.contestant_name = 'Tabatha Gehling' intersect select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code = t2.vote_id join contestants as t3 on t2.contestant_number = t3.contestant_number where t3.contestant_name = 'Kelly Clauss'	SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
voter_1	select contestant_name from contestants where contestant_name like "%al%"	select contestant_name from contestants where contestant_name like "%al%"
world_1	select name from country where indepyear > 1950	SELECT Name FROM country WHERE IndepYear  >  1950
world_1	select name from country where indepyear > 1950	SELECT Name FROM country WHERE IndepYear  >  1950
world_1	select count(*) from country where governmentform = "Republic"	SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
world_1	select count(distinct name) from country where governmentform = "Republic"	SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
world_1	select sum(surfacearea) from country where region = "Caribean"	SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
world_1	select sum(surfacearea) from country where continent = "Carribean"	SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
world_1	select continent from country where name = "Anguilla"	SELECT Continent FROM country WHERE Name  =  "Anguilla"
world_1	select continent from country where name = "Anguilla"	SELECT Continent FROM country WHERE Name  =  "Anguilla"
world_1	select region from city where name = "Kabbul"	SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
world_1	select region from city where name = "Kabbul"	SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
world_1	select language from countrylanguage where countrycode = (select t1.language from country as t1 join country as t2 on t1.countrycode = t2.code where t2.name = "Aruba") group by t1.language order by count(*) desc limit 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
world_1	select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.localname = "Aruba" group by t1.language order by count(*) desc limit 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
world_1	select population, lifeexpectancy from country where name = "Brazil"	SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
world_1	select population, lifeexpectancy from country where name = "Brazil"	SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
world_1	select region, population from country where name = "Angola"	SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
world_1	select region, population from country where name = "Angola"	SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
world_1	select avg(lifeexpectancy) from country where region = "Central Africa"	SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
world_1	select avg(lifeexpectancy) from country where region = "Central Africa"	SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
world_1	select name from country where continent = "Asia" order by lifeexpectancy limit 1	SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
world_1	select name from country where continent = "Asia" order by lifeexpectancy limit 1	SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
world_1	select sum(population), max(gnp) from country where continent = "Asia"	SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
world_1	select gnp, population from country where continent = "Asia" group by gnp order by count(*) desc limit 1	SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
world_1	select avg(lifeexpectancy) from country where continent = "Africa"	SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
world_1	select avg(lifeexpectancy) from country where continent = "Africa" and governmentform = "Republic"	SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
world_1	select sum(surfacearea) from country where continent = "Asia" intersect select sum(surfacearea) from country where continent = "Europe"	SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
world_1	select sum(surfacearea) from country where continent = "Asia" or continent = "Europe"	SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
world_1	select count(*) from city where district = "Gelderland"	SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
world_1	select sum(population) from city where district = "Gelderland"	SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
world_1	select avg(gnp), sum(population) from country where governmentform = "US Territory"	SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
world_1	select avg(gnp), sum(population) from country where governmentform = "US Territory"	SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
world_1	select count(distinct language) from countrylanguage	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
world_1	select count(distinct language) from countrylanguage	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
world_1	select count(distinct governmentform) from country where continent = "Africa"	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
world_1	select count(distinct governmentform) from country where continent = "Africa"	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
world_1	select count(distinct language) from countrylanguage where name = "Aruba"	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
world_1	select count(distinct language) from countrylanguage where name = "Aruba"	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
world_1	select count(distinct language) from countrylanguage where name = "Afghanistan"	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
world_1	select count(distinct language) from countrylanguage where name = "Afghanistan"	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
world_1	select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode group by t2.countrycode order by count(*) desc limit 1	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
world_1	select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode group by t2.countrycode order by count(*) desc limit 1	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
world_1	select continent from country group by continent order by count(*) desc limit 1	SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
world_1	select continent from country group by continent order by count(*) desc limit 1	SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
world_1	select count(*) from countrylanguage where language = "English" intersect select count(*) from countrylanguage where language = "Dutch"	SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
world_1	select count(*) from countrylanguage where language = "English" intersect select count(*) from countrylanguage where language = "Dutch"	SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
world_1	select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "English" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "French"	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
world_1	select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "English" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "French"	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
world_1	select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "English" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "French"	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
world_1	select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "English" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "French"	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
world_1	select count(distinct continent) from country where language = "Chinese"	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
world_1	select count(distinct continent) from country where language = "Chinese"	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
world_1	select region from countrylanguage where language = "English" or language = "Dutch"	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
world_1	select region from countrylanguage where language = "Dutch" or language = "Englisch"	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
world_1	select countrycode from countrylanguage where language = "English" or language = "Dutch"	select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
world_1	select countrycode from countrylanguage where language = "English" or language = "Dutch"	SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
world_1	select language from countrylanguage where continent = "Asia" group by language order by count(*) desc limit 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
world_1	select language from countrylanguage where countrycode = (select countrycode from country where continent = 'Asia' group by language order by count(*) desc limit 1)	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
world_1	select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.countrycode where t2.governmentform = "Republic" group by t1.language having count(*) = 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
world_1	select distinct language from countrylanguage where governmentform = "Republic"	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
world_1	select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.language = "English" group by t2.name order by count(*) desc limit 1	SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
world_1	select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.language = "English" group by t2.name order by count(*) desc limit 1	SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
world_1	select name, population, lifeexpectancy from country where continent = "Asia" order by surfacearea desc limit 1	SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
world_1	select name, population, lifeexpectancy from country where continent = "Asia" group by countrycode order by count(*) desc limit 1	SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
world_1	select avg(lifeexpectancy) from country where language!= "English"	SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
world_1	select avg(lifeexpectancy) from country where language!= "English"	SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
world_1	select sum(population) from country where language!= 'English'	SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
world_1	select count(*) from country where countrycode not in (select countrycode from country where language = 'English')	SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
world_1	select t2.language from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t1.headofstate = "Beatrix"	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
world_1	select t2.isofficial from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t1.headofstate = "Beatrix"	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
world_1	select count(distinct language) from countrylanguage where founded< 1930	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
world_1	select count(distinct language) from countrylanguage where isofficial< 1930	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
world_1	select name from country where surfacearea > (select min(surfacearea) from country where continent = 'Europe')	SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
world_1	select name from country where surfacearea > (select min(surfacearea) from country where continent = 'Europe')	SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
world_1	select name from country where population< (select min(population) from country where continent = 'Asia')	SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
world_1	select name from country where population< (select min(population) from country where continent = 'Asia')	SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
world_1	select name from country where population > (select min(population) from country where continent = 'Africa')	SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
world_1	select name from country where population > (select min(population) from country where continent = 'Africa')	SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
world_1	select countrycode from country where language!= 'English'	SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
world_1	select countrycode from country where language!= 'English'	SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
world_1	select countrycode from country where language!= 'English'	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
world_1	select countrycode from countrylanguage where language!= "English"	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
world_1	select countrycode from country where language!= "English" and governmentform!= "Republic"	SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
world_1	select countrycode from country where language!= "English" and governmentform!= "Republic"	SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
world_1	select distinct t1.name from city as t1 join country as t2 on t1.id = t2.countrycode where t2.language!= "English"	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
world_1	select name from city where countrycode not in (select countrycode from country where language = "English")	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
world_1	select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.language = "Chinese"	select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
world_1	select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.continent = "Asia" and t2.language = "Chinese"	SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
world_1	select name, indepyear, surfacearea from country order by population asc limit 1	SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
world_1	select name, indepyear, surfacearea from country order by population limit 1	SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
world_1	select population, name, headofstate from country order by surfacearea desc limit 1	SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
world_1	select name, population, headofstate from country order by surfacearea desc limit 1	SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
world_1	select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode group by t2.countrycode having count(*) >= 3	SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
world_1	select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode group by t1.countrycode having count(*) > 2	SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
world_1	select count(*), district from city where population > (select avg(population) from city) group by district	SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
world_1	select district, count(*) from city where population > (select avg(population) from city) group by district	SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
world_1	select governmentform, sum(population) from country where lifeexpectancy > 72 group by governmentform	SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
world_1	select governmentform, sum(population) from country where lifeexpectancy > 72 group by governmentform	SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
world_1	select continent, sum(lifeexpectancy) from country where avg(lifeexpectancy)< 72 group by continent	SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
world_1	select continent, sum(popuation), avg(lifeexpectancy) from country where population< 72 group by continent	SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
world_1	select name, region from country order by surfacearea desc limit 5	SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
world_1	select name, surfacearea from country order by surfacearea desc limit 5	SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
world_1	select name from country order by population desc limit 3	SELECT Name FROM country ORDER BY Population DESC LIMIT 3
world_1	select name from country order by population desc limit 3	SELECT Name FROM country ORDER BY Population DESC LIMIT 3
world_1	select name from country order by population asc limit 3	SELECT Name FROM country ORDER BY Population ASC LIMIT 3
world_1	select name from country order by population asc limit 3	SELECT Name FROM country ORDER BY Population ASC LIMIT 3
world_1	select count(*) from country where continent = "Asia"	SELECT count(*) FROM country WHERE continent  =  "Asia"
world_1	select count(*) from country where continent = "Asia"	SELECT count(*) FROM country WHERE continent  =  "Asia"
world_1	select name from country where continent = "Europe" and population = 80000	SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
world_1	select name from country where continent = "Europe" and population = 80000	SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
world_1	select sum(population), avg(surfacearea) from country where continent = "North America" and region > 3000	select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
world_1	select sum(population), avg(surfacearea) from country where region = "North America" and surfacearea > 3000	select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
world_1	select name from city where population between 160000 and 900000	SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
world_1	select name from city where population between 160000 and 900000	select name from city where population between 160000 and 900000
world_1	select language from countrylanguage group by language order by count(*) desc limit 1	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
world_1	select language from countrylanguage group by language order by count(*) desc limit 1	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
world_1	select language, percentage, count(*) from countrylanguage group by countrycode order by count(*) desc limit 1	SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
world_1	select countrycode, language, percentage from countrylanguage group by countrycode order by sum(population) desc limit 1	SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
world_1	select count(*) from countrylanguage where language = "Spanish" group by countrycode order by count(*) desc limit 1	SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
world_1	select count(*) from countrylanguage where language = "Spanish" group by countrycode order by count(*) desc limit 1	SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
world_1	select countrycode from countrylanguage where language = "Spanish" group by countrycode order by count(*) desc limit 1	SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
world_1	select countrycode from countrylanguage where language = "Spanish" group by countrycode order by count(*) desc limit 1	SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
orchestra	select count(*) from conductor	SELECT count(*) FROM conductor
orchestra	select count(*) from conductor	SELECT count(*) FROM conductor
orchestra	select name from conductor order by age asc	SELECT Name FROM conductor ORDER BY Age ASC
orchestra	select name from conductor order by age	SELECT Name FROM conductor ORDER BY Age ASC
orchestra	select name from conductor where nationality!= "USA"	SELECT Name FROM conductor WHERE Nationality != 'USA'
orchestra	select name from conductor where nationality!= "USA"	SELECT Name FROM conductor WHERE Nationality != 'USA'
orchestra	select record_company from orchestra order by year_of_founded desc	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
orchestra	select record_company from orchestra order by year_of_founded desc	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
orchestra	select avg(attendance) from show	SELECT avg(Attendance) FROM SHOW
orchestra	select avg(attendance) from show	SELECT avg(Attendance) FROM SHOW
orchestra	select max(share), min(share) from performance where type!= "Live final"	SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
orchestra	select max(share), min(share) from performance where type!= "Live final"	SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
orchestra	select count(distinct nationality) from conductor	SELECT count(DISTINCT Nationality) FROM conductor
orchestra	select count(distinct nationality) from conductor	SELECT count(DISTINCT Nationality) FROM conductor
orchestra	select name from conductor order by year_of_work desc	SELECT Name FROM conductor ORDER BY Year_of_Work DESC
orchestra	select name from conductor order by year_of_work desc	SELECT Name FROM conductor ORDER BY Year_of_Work DESC
orchestra	select name from conductor order by year_of_work desc limit 1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
orchestra	select name from conductor order by year_of_work desc limit 1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
orchestra	select t2.name, t1.orchestration from orchestra as t1 join conductor as t2 on t1.orchestrator_id = t2.director_id	SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
orchestra	select t2.name, t1.name from orchestra as t1 join conductor as t2 on t1.orchestre_id = t2.director_id	SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
orchestra	select t2.name from performance as t1 join conductor as t2 on t1.director_id = t2.director_id join orchestra as t3 on t1.orchestral_id = t3.orchestral_id group by t2.name having count(*) > 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
orchestra	select t2.name from performance as t1 join conductor as t2 on t1.director_id = t2.director_id join orchestra as t3 on t1.orchestral_id = t3.orchestral_id group by t2.name having count(*) > 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
orchestra	select t2.name from performance as t1 join conductor as t2 on t1.director_id = t2.director_id join orchestra as t3 on t1.orchestre_id = t3.orchestre_id group by t2.director_id order by count(*) desc limit 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
orchestra	select t2.name from performance as t1 join conductor as t2 on t1.director_id = t2.director_id join orchestra as t3 on t1.orchestre_id = t3.orchestre_id group by t2.director_id order by count(*) desc limit 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
orchestra	select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.director_id where t1.year_of_founded > 2008	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
orchestra	select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.director_id where t1.year_of_founded > 2008	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
orchestra	select record_company, count(*) from orchestra group by record_company	SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
orchestra	select record_company, count(*) from orchestra group by record_company	SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
orchestra	select major_record_format from orchestra group by major_record_format order by count(*) asc	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
orchestra	select major_record_format from orchestra order by major_record_format	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
orchestra	select record_company from orchestra group by record_company order by count(*) desc limit 1	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
orchestra	select record_company from orchestra group by record_company order by count(*) desc limit 1	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
orchestra	select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
orchestra	select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
orchestra	select record_company from orchestra where year_of_founded< 2003 intersect select record_company from orchestra where year_of_founded > 2003	SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
orchestra	select record_company from orchestra where year_of_founded< 2003 intersect select record_company from orchestra where year_of_founded > 2003	SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
orchestra	select count(*) from orchestra where major_record_format = "CD" or major_record_format = "DVD"	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
orchestra	select count(*) from orchestra where major_record_format = "CD" or major_record_format = "DVD"	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
orchestra	select t1.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestre_id = t2.orchestre_id group by t1.orchestre_id having count(*) > 1	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
orchestra	select t1.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestre_id = t2.orchestre_id group by t1.orchestre_id having count(*) > 1	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
network_1	select count(*) from highschooler	SELECT count(*) FROM Highschooler
network_1	select count(*) from highschooler	SELECT count(*) FROM Highschooler
network_1	select name, grade from highschooler	SELECT name ,  grade FROM Highschooler
network_1	select name, grade from highschooler	SELECT name ,  grade FROM Highschooler
network_1	select distinct grade from highschooler	SELECT grade FROM Highschooler
network_1	select grade from highschooler	SELECT grade FROM Highschooler
network_1	select grade from highschooler where name = 'Kyle'	SELECT grade FROM Highschooler WHERE name  =  "Kyle"
network_1	select grade from highschooler where name = 'Kyle'	SELECT grade FROM Highschooler WHERE name  =  "Kyle"
network_1	select name from highschooler where grade = 10	SELECT name FROM Highschooler WHERE grade  =  10
network_1	select name from highschooler where grade = 10	SELECT name FROM Highschooler WHERE grade  =  10
network_1	select id from highschooler where name = 'Kyle'	SELECT ID FROM Highschooler WHERE name  =  "Kyle"
network_1	select t2.id from highschooler as t1 join friend as t2 on t1.id = t2.friend_id join highschooler as t3 on t2.id = t3.id where t3.name = 'Kyle'	SELECT ID FROM Highschooler WHERE name  =  "Kyle"
network_1	select count(*) from highschooler where grade = 9 or grade = 10	SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
network_1	select count(*) from highschooler where grade = 9 or grade = 10	SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
network_1	select grade, count(*) from highschooler group by grade	SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
network_1	select grade, count(*) from highschooler group by grade	SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
network_1	select grade from highschooler group by grade order by count(*) desc limit 1	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
network_1	select grade from highschooler group by grade order by count(*) desc limit 1	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
network_1	select grade from highschooler group by grade having count(*) >= 4	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
network_1	select grade from highschooler group by grade having count(*) >= 4	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
network_1	select t1.student_id, count(*) from friend as t1 join likes as t2 on t1.friend_id = t2.friend_id group by t1.student_id	SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
network_1	select count(*), student_id from friend group by student_id	SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
network_1	select t2.name, count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t1.friend_id = t3.student_id group by t1.student_id	SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
network_1	select t2.name, count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name	SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
network_1	select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count(*) desc limit 1	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
network_1	select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t1.friend_id = t3.student_id group by t1.student_id order by count(*) desc limit 1	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
network_1	select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count(*) >= 3	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
network_1	select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name having count(*) >= 3	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
network_1	select t2.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id join highschooler as t3 on t2.highschooler_id = t3.id where t3.name = 'Kyle'	SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
network_1	select t2.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id join likes as t3 on t2.like_id = t3.like_id join student as t4 on t3.id = t4.id where t4.name = 'Kyle'	SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
network_1	select count(distinct t2.friend_id) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = "Kyle"	SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
network_1	select count(distinct friend_id) from friend where name = 'Kyle'	SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
network_1	select student_id from student except select student_id from friend	SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
network_1	select id from highschooler except select t2.id from friend as t1 join highschooler as t2 on t1.student_id = t2.id	SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
network_1	select name from highschooler where id not in (select student_id from friend)	SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
network_1	select name from highschooler where id not in (select student_id from friend)	SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
network_1	select t1.id from highschooler as t1 join likes as t2 on t1.id = t2.liked_id join friend as t3 on t2.friend_id = t3.id where t3.name = 'Hi' intersect select t1.id from highschooler as t1 join likes as t2 on t1.id = t2.liked_id	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
network_1	select student_id from likes intersect select student_id from likes	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
network_1	select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id join friend as t3 on t2.friend_id = t3.student_id intersect select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.like_id	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
network_1	select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t1.friend_id = t3.id intersect select t2.name from likes as t1 join highschooler as t2 on t1.highschooler_id = t2.id where t3.friend_id = t3.id intersect select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t1.like_id = t3.id	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
network_1	select count(*), t1.student_id from likes as t1 join likes as t2 on t1.like_id = t2.like_id group by t1.student_id	SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
network_1	select t1.student_id, count(*) from likes as t1 join friends as t2 on t1.student_id = t2.student_id group by t1.student_id	SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
network_1	select t2.name, count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id	SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
network_1	select t2.name, count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id	SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
network_1	select t2.name from likes as t1 join highschooler as t2 on t1.highschooler = t2.id group by t1.highschooler order by count(*) desc limit 1	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
network_1	select t2.name from likes as t1 join student as t2 on t1.student_id = t2.id group by t1.student_id order by count(*) desc limit 1	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
network_1	select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count(*) >= 2	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
network_1	select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count(*) >= 2	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
network_1	select name from highschooler where grade > 5 intersect select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t1.id having count(*) >= 2	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
network_1	select name from highschooler where grade > 5 intersect select name from highschooler group by name having count(*) >= 2	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
network_1	select count(*) from likes as t1 join highschooler as t2 on t1.highschool_id = t2.id where t2.name = 'Kyle'	SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
network_1	select count(distinct t2.like_id) from highschooler as t1 join likes as t2 on t1.id = t2.like_id join student as t3 on t2.student_id = t3.id where t1.name = 'Kyle'	SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
network_1	select avg(t2.grade) from likes as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t1.friend_id = t3.student_id	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
network_1	select avg(t2.grade) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t1.friend_id = 'T2.student_id'	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
network_1	select min(grade) from highschooler where id not in (select student_id from friend)	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
network_1	select min(grade) from highschooler where id not in (select student_id from friend)	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
dog_kennels	select state from owners intersect select state from professionals	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
dog_kennels	select state from owners intersect select state from professionals	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
dog_kennels	select avg(age) from dogs where owner_id in (select dog_id from treatments)	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
dog_kennels	select avg(age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
dog_kennels	select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) > 2	SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
dog_kennels	select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) > 2	SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
dog_kennels	select name from dogs where owner_id not in (select dog_id from treatments group by dog_id having cost_of_treatment > 1000)	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
dog_kennels	select name from dogs where owner_id not in (select dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000)	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
dog_kennels	select first_name from professionals union select last_name from owners except select first_name from dogs	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
dog_kennels	select first_name from professionals union select last_name from owners except select first_name from dogs	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
dog_kennels	select professional_id, role_code, email_address from professionals except select professional_id, role_code from treatments	SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
dog_kennels	select t1.professional_id, t2.role_code, t2.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id	SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
dog_kennels	select t1.owner_id, t2.first_name, t2.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1	SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
dog_kennels	select t1.owner_id, t2.first_name, t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1	SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
dog_kennels	select t1.professional_id, t1.role_code, t2.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2	SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
dog_kennels	select t1.professional_id, t1.role_code, t2.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2	SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
dog_kennels	select breed_name from breeds group by breed_code order by count(*) desc limit 1	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
dog_kennels	select breed_name from breeds group by breed_code order by count(*) desc limit 1	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
dog_kennels	select t1.owner_id, t2.last_name from treatments as t1 join owners as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1	SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
dog_kennels	select t1.owner_id, t2.last_name from treatments as t1 join dogs as t2 on t1.dog_id = t2.owner_id group by t1.owner_id order by sum(t1.cost_of_treatment) desc limit 1	SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
dog_kennels	select t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code = t2.treatment_type_code group by t1.treatment_type_code order by sum(t1.cost_of_treatment) asc limit 1	SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
dog_kennels	select t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code = t2.treatment_type_code group by t1.treatment_type_code order by sum(t1.cost_of_treatment) limit 1	SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
dog_kennels	select t1.owner_id, t2.zip_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by sum(t2.charge_amount) desc limit 1	SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
dog_kennels	select t1.owner_id, t2.zip_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by sum(t2.charge_amount) desc limit 1	SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
dog_kennels	select t1.professional_id, t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2	SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
dog_kennels	select t1.professional_id, t2.cell_phone from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2	SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
dog_kennels	select t2.first_name, t2.last_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id where t1.cost_of_treatment< (select avg(cost_of_treatment) from treatments)	SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
dog_kennels	select t2.first_name, t2.last_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id where t1.cost_of_treatment< (select avg(cost_of_treatment) from treatments)	SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
dog_kennels	select date_of_treatment, first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id	SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
dog_kennels	select date_of_treatment, first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id	SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
dog_kennels	select cost_of_treatment, treatment_type_description from treatment_types	SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
dog_kennels	select cost_of_treatment, treatment_type_description from treatment_types	SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
dog_kennels	select t1.first_name, t1.last_name, t2.size_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id	SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
dog_kennels	select t1.first_name, t1.last_name, t2.size_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id	SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
dog_kennels	select t1.first_name, t2.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
dog_kennels	select t2.first_name, t2.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
dog_kennels	select t2.name, t1.date_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id where t2.breed_code = (select breed_code from dogs group by breed_code order by count(*) desc limit 1)	SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
dog_kennels	select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id join breeds as t3 on t2.breed_code = t3.breed_code order by t3.breed_name limit 1	SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
dog_kennels	select t2.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = "Virginia"	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
dog_kennels	select t2.first_name, t2.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = "Virginia"	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
dog_kennels	select date_arrived, date_departed from dogs where dog_id in (select dog_id from treatments)	SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
dog_kennels	select date_arrived, date_departed from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id	SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
dog_kennels	select t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id order by t1.age limit 1	SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
dog_kennels	select t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id order by t1.age limit 1	SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
dog_kennels	select email_address from professionals where state = "Hawaii" or state = "Wisconsin"	SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
dog_kennels	select email_address from professionals where state = "Hawaii" or state = "Wisconsin"	SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
dog_kennels	select date_arrived, date_departed from dogs	SELECT date_arrived ,  date_departed FROM Dogs
dog_kennels	select date_arrived, date_departed from dogs	SELECT date_arrived ,  date_departed FROM Dogs
dog_kennels	select count(*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t2.dog_id	SELECT count(DISTINCT dog_id) FROM Treatments
dog_kennels	select count(*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t2.dog_id	SELECT count(DISTINCT dog_id) FROM Treatments
dog_kennels	select count(distinct professional_id) from treatments	SELECT count(DISTINCT professional_id) FROM Treatments
dog_kennels	select count(distinct professional_id) from treatments	SELECT count(DISTINCT professional_id) FROM Treatments
dog_kennels	select role_code, street, city, state from professionals where city like "%west%"	SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
dog_kennels	select role_code, street, city, state from professionals where city like "%west%"	SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
dog_kennels	select first_name, last_name, email_address from owners where state like "%north%"	SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
dog_kennels	select first_name, last_name, email_address from owners where state like "%north%"	SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
dog_kennels	select count(*) from dogs where age< (select avg(age) from dogs)	SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
dog_kennels	select count(*) from dogs where age< (select avg(age) from dogs)	SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
dog_kennels	select max(cost_of_treatment) from treatments	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
dog_kennels	select cost_of_treatment from treatments order by date_of_treatment desc limit 1	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
dog_kennels	select count(*) from dogs where dog_id not in (select dog_id from treatments)	SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
dog_kennels	select count(*) from dogs where dog_id not in (select dog_id from treatments)	select count(*) from dogs where dog_id not in ( select dog_id from treatments )
dog_kennels	select count(*) from owners where owner_id not in (select owner_id from dogs)	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
dog_kennels	select count(*) from owners where owner_id not in (select owner_id from dogs)	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
dog_kennels	select count(*) from professionals where professional_id not in (select professional_id from treatments)	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
dog_kennels	select count(*) from professionals where professional_id not in (select professional_id from treatments)	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
dog_kennels	select name, age, weight from dogs where abandoned_yn = 1 union select name, age, weight from dogs where abandoned_yn = 1	SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
dog_kennels	select name, age, weight from dogs where abandoned_yn = 1 and 0 = 1	SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
dog_kennels	select avg(age) from dogs	SELECT avg(age) FROM Dogs
dog_kennels	select avg(age) from dogs	SELECT avg(age) FROM Dogs
dog_kennels	select age from dogs order by age desc limit 1	SELECT max(age) FROM Dogs
dog_kennels	select age from dogs order by age desc limit 1	SELECT max(age) FROM Dogs
dog_kennels	select charge_type, charge_amount from charges	SELECT charge_type ,  charge_amount FROM Charges
dog_kennels	select charge_type, charge_amount from charges	SELECT charge_type ,  charge_amount FROM Charges
dog_kennels	select charge_type, charge_amount from charges order by charge_amount desc limit 1	SELECT max(charge_amount) FROM Charges
dog_kennels	select charge_type, charge_amount from charges order by charge_type desc limit 1	SELECT max(charge_amount) FROM Charges
dog_kennels	select email_address, cell_phone, home_phone from professionals	SELECT email_address ,  cell_number ,  home_phone FROM professionals
dog_kennels	select email_address, cell_phone, home_phone from professionals	SELECT email_address ,  cell_number ,  home_phone FROM professionals
dog_kennels	select count(*), size_code from dogs	SELECT DISTINCT breed_code ,  size_code FROM dogs
dog_kennels	select distinct breed_code, size_code from dogs	SELECT DISTINCT breed_code ,  size_code FROM dogs
dog_kennels	select t2.first_name, t3.treatment_type_description from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id join treatment_types as t3 on t2.treatment_type_code = t3.treatment_type_code	SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
dog_kennels	select t2.first_name, t2.treatment_type_description from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id	SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
singer	select count(*) from singer	SELECT count(*) FROM singer
singer	select count(*) from singer	SELECT count(*) FROM singer
singer	select name from singer order by net_worth_millions asc	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
singer	select name from singer order by net_worth_millions asc	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
singer	select birth_year, citizenship from singer	SELECT Birth_Year ,  Citizenship FROM singer
singer	select birth_year, citizenship from singer	SELECT Birth_Year ,  Citizenship FROM singer
singer	select name from singer where citizenship!= "France"	SELECT Name FROM singer WHERE Citizenship != "France"
singer	select name from singer where citizenship!= "France"	SELECT Name FROM singer WHERE Citizenship != "France"
singer	select name from singer where birth_year = 1948 or birth_year = 1949	SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
singer	select name from singer where birth_year = 1948 or birth_year = 1949	SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
singer	select name from singer order by net_worth_millions desc limit 1	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
singer	select name from singer order by net_worth_millions desc limit 1	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
singer	select citizenship, count(*) from singer group by citizenship	SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
singer	select citizenship, count(*) from singer group by citizenship	SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
singer	select citizenship from singer group by citizenship order by count(*) desc limit 1	SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
singer	select citizenship from singer group by citizenship order by count(*) desc limit 1	select citizenship from singer group by citizenship order by count(*) desc limit 1
singer	select citizenship, max(net_worth_millions) from singer group by citizenship	SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
singer	select citizenship, max(net_worth_millions) from singer group by citizenship	SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
singer	select t2.title, t3.name from singer as t1 join song as t2 on t1.song_id = t2.song_id join singer as t3 on t1.song_id = t3.song_id	SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
singer	select t2.title, t3.name from song as t1 join singer as t2 on t1.song_id = t2.song_id join song as t3 on t1.song_id = t3.song_id	SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
singer	select distinct t1.name from singer as t1 join song as t2 on t1.song_id = t2.song_id where t2.sales > 300000	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
singer	select distinct t2.name from song as t1 join singer as t2 on t1.song_id = t2.song_id where t1.sales > 300000	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
singer	select t2.name, count(*) from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id having count(*) > 1	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
singer	select t2.name from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id having count(*) > 1	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
singer	select t2.name, sum(t1.sales) from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t2.name	SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
singer	select t2.name, sum(t1.sales) from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t2.name	SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
singer	select name from singer where singer_id not in (select singer_id from song)	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
singer	select name from singer where singer_id not in (select singer_id from song)	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
singer	select citizenship from singer where birth_year< 1945 intersect select citizenship from singer where birth_year > 1955	SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
singer	select citizenship from singer where birth_year< 1945 intersect select citizenship from singer where birth_year > 1955	SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
real_estate_properties	select count(*) from other_available_features	SELECT count(*) FROM Other_Available_Features
real_estate_properties	select t2.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code = t2.feature_type_code where t1.feature_name = "AirCon"	SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
real_estate_properties	select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code	SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
real_estate_properties	select property_name from properties where property_type_code = "House" or property_type_code = "Apartment" group by property_name having count(*) > 1	SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
